{
  "openapi": "3.0.0",
  "paths": {
    "/api/factchecks/sync": {
      "get": {
        "operationId": "FactcheckController_sync",
        "summary": "Synchronize with server.",
        "description": "Synchronize with server.",
        "parameters": [
          {
            "name": "token",
            "required": false,
            "in": "query",
            "example": "6200218668fc82e7bdf15088",
            "schema": { "pattern": "^[0-9a-fA-F]{24}$", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully initialized sse stream of factchecks.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FactcheckEventDto" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Factcheck"]
      }
    },
    "/api/factchecks": {
      "post": {
        "operationId": "FactcheckController_create",
        "summary": "Create a new factcheck.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateFactcheckDto" } } }
        },
        "responses": {
          "201": {
            "description": "The factcheck has been successfully created.",
            "headers": { "Location": { "schema": { "type": "string" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Factcheck"]
      }
    },
    "/api/factchecks/{id}": {
      "get": {
        "operationId": "FactcheckController_findById",
        "summary": "Retrieve a factcheck by id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$", "example": "6200218668fc82e7bdf15088" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned factcheck.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FactcheckDto" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "404": { "description": "Factcheck does not exist." },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Factcheck"]
      }
    },
    "/api/tickets": {
      "post": {
        "operationId": "TicketController_create",
        "summary": "Create a new ticket.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CreateTicketDto" } } }
        },
        "responses": {
          "201": {
            "description": "The ticket has been successfully created.",
            "headers": { "Location": { "schema": { "type": "string" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Tickets"]
      },
      "get": {
        "operationId": "TicketController_listTicketsByUrl",
        "summary": "Retrieve a list of tickets.",
        "parameters": [
          { "name": "url", "required": true, "in": "query", "schema": { "type": "string" } },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "default": 1, "type": "number", "minimum": 1 }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": { "default": 10, "type": "number", "minimum": 1, "maximum": 100 }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned list of tickets.",
            "headers": { "link": { "schema": { "type": "string" } } },
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TicketListDto" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "operationId": "TicketController_findById",
        "summary": "Retrieve a ticket by id.",
        "parameters": [{ "name": "id", "required": true, "in": "path", "schema": { "type": "string" } }],
        "responses": {
          "200": {
            "description": "Successfully returned ticket.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TicketDto" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "404": { "description": "Ticket does not exist." },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/count/{url}": {
      "get": {
        "operationId": "TicketController_countTicketsByUrl",
        "summary": "Retrive number of tickets for specific url",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "path",
            "example": "https://twitter.com/JkmMikke/status/1511628185150136325",
            "description": "RFC 3886 standard url format",
            "schema": { "format": "url", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned TicketCountDto.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TicketCountDto" } } }
          },
          "400": {
            "description": "Parameters are not valid or they are missing.",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ValidationErrorDto" } } }
          },
          "404": { "description": "Ticketcountdto does not exist." },
          "default": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DefaultResponseDto" } } }
          }
        },
        "tags": ["Tickets"]
      }
    }
  },
  "info": {
    "title": "Faktyczka API",
    "description": "Faktyczka API is an server side of Faktyczka extension.",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    { "name": "Factcheck", "description": "Operations on factchecks" },
    { "name": "Tickets", "description": "Operations on tickets" }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "DefaultResponseDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "status": { "type": "string" },
          "path": { "type": "string" },
          "message": { "type": "string" }
        },
        "required": ["name", "status", "path"]
      },
      "FactcheckStatusEnum": { "type": "string", "enum": ["Truth", "Fake", "Warning", "Unverifable"] },
      "FactcheckDataDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$", "example": "6200218668fc82e7bdf15088" },
          "url": { "type": "string" },
          "status": {
            "example": ["Truth", "Fake", "Warning", "Unverifable"],
            "$ref": "#/components/schemas/FactcheckStatusEnum"
          }
        },
        "required": ["id", "url", "status"]
      },
      "FactcheckEventDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$", "example": "6200218668fc82e7bdf15088" },
          "data": { "$ref": "#/components/schemas/FactcheckDataDto" },
          "type": { "type": "string", "enum": ["factcheck"] }
        },
        "required": ["id", "data", "type"]
      },
      "ErrorDetailsDto": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "message": { "type": "string" },
          "errorCode": { "type": "string" }
        },
        "required": ["path", "message", "errorCode"]
      },
      "ValidationErrorDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "status": { "type": "string" },
          "path": { "type": "string" },
          "message": { "type": "string" },
          "errors": { "type": "array", "items": { "$ref": "#/components/schemas/ErrorDetailsDto" } }
        },
        "required": ["name", "status", "path"]
      },
      "CreateFactcheckDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "url",
            "maxLength": 1000,
            "example": "https://twitter.com/JkmMikke/status/1511628185150136325",
            "description": "RFC 3886 standard url format"
          },
          "status": {
            "example": ["Truth", "Fake", "Warning", "Unverifable"],
            "$ref": "#/components/schemas/FactcheckStatusEnum"
          },
          "verifiedBy": { "type": "string", "minLength": 5, "maxLength": 200, "example": "demagog@.org.pl" },
          "verificationSrc": {
            "type": "string",
            "format": "url",
            "maxLength": 1000,
            "example": "https://demagog.org.pl/wypowiedzi/w-mariupolu-doszlo-do-tragedii-janusz-korwin-mikke-powiela-fake-newsy/",
            "description": "RFC 3886 standard url format"
          },
          "description": {
            "type": "string",
            "minLength": 5,
            "maxLength": 2000,
            "example": "9 marca doszło do zbombardowania szpitala w Mariupolu, co oprócz władz ukraińskich potwierdziła Światowa Organizacja Zdrowia (WHO) oraz Biuro Wysokiego Komisarza Narodów Zjednoczonych ds. Praw Człowieka (OHCHR)."
          }
        },
        "required": ["url", "status", "verifiedBy", "verificationSrc", "description"]
      },
      "FactcheckDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$", "example": "6200218668fc82e7bdf15088" },
          "url": {
            "type": "string",
            "format": "url",
            "maxLength": 1000,
            "example": "https://twitter.com/JkmMikke/status/1511628185150136325",
            "description": "RFC 3886 standard url format"
          },
          "status": {
            "example": ["Truth", "Fake", "Warning", "Unverifable"],
            "$ref": "#/components/schemas/FactcheckStatusEnum"
          },
          "verifiedBy": { "type": "string", "minLength": 5, "maxLength": 200, "example": "demagog@.org.pl" },
          "verificationSrc": {
            "type": "string",
            "format": "url",
            "maxLength": 1000,
            "example": "https://demagog.org.pl/wypowiedzi/w-mariupolu-doszlo-do-tragedii-janusz-korwin-mikke-powiela-fake-newsy/",
            "description": "RFC 3886 standard url format"
          },
          "description": {
            "type": "string",
            "minLength": 5,
            "maxLength": 2000,
            "example": "9 marca doszło do zbombardowania szpitala w Mariupolu, co oprócz władz ukraińskich potwierdziła Światowa Organizacja Zdrowia (WHO) oraz Biuro Wysokiego Komisarza Narodów Zjednoczonych ds. Praw Człowieka (OHCHR)."
          }
        },
        "required": ["id", "url", "status", "verifiedBy", "verificationSrc", "description"]
      },
      "CreateTicketDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "url",
            "maxLength": 1000,
            "example": "https://twitter.com/JkmMikke/status/1511628185150136325",
            "description": "RFC 3886 standard url format"
          },
          "name": { "type": "string", "minLength": 5, "maxLength": 2000, "example": "Jan Kowalski" },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "example": "jan.kowalski@email.com",
            "description": "RFC 5322 standard email format"
          },
          "description": {
            "type": "string",
            "minLength": 5,
            "maxLength": 2000,
            "example": "Przedstawiony artykuł zawiera fałszywe informację, proszę sprawdzić tą stronę https://www.ohchr.org/en/statements/2022/03/situation-ukraine"
          }
        },
        "required": ["url", "name", "email"]
      },
      "TicketDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "url",
            "maxLength": 1000,
            "example": "https://twitter.com/JkmMikke/status/1511628185150136325",
            "description": "RFC 3886 standard url format"
          },
          "name": { "type": "string", "minLength": 5, "maxLength": 2000, "example": "Jan Kowalski" },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "example": "jan.kowalski@email.com",
            "description": "RFC 5322 standard email format"
          },
          "description": {
            "type": "string",
            "minLength": 5,
            "maxLength": 2000,
            "example": "Przedstawiony artykuł zawiera fałszywe informację, proszę sprawdzić tą stronę https://www.ohchr.org/en/statements/2022/03/situation-ukraine"
          }
        },
        "required": ["url", "name", "email"]
      },
      "TicketListDto": {
        "type": "object",
        "properties": {
          "data": { "type": "array", "items": { "$ref": "#/components/schemas/TicketDto" } },
          "pages": { "type": "number" }
        },
        "required": ["data", "pages"]
      },
      "TicketCountDto": {
        "type": "object",
        "properties": { "count": { "type": "number", "minimum": 0 } },
        "required": ["count"]
      }
    }
  },
  "externalDocs": {
    "description": "CodersCamp 2021 - Hackathon - GitHub",
    "url": "https://github.com/CodersCamp2021-HK/CodersCamp2021.Project.Hackathon"
  }
}
